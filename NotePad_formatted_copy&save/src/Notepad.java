
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dialog;
import java.awt.FileDialog;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import javax.swing.border.CompoundBorder;
import javax.swing.border.LineBorder;
import javax.swing.border.MatteBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author azza
 */
public class Notepad extends javax.swing.JFrame {

    /**
     * Creates new form Notepad
     */
    public Notepad() {
        initComponents();
        mDisEnable();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    void mDisEnable(){
        menuCopy.enable(false);
        meunCut.enable(false);
        meunDelete.enable(false);
        menuSelect.enable(false);
        menuPaste.enable(false);
    }
    void mEnable(){
        menuCopy.enable(true);
         meunCut.enable(true);
        meunDelete.enable(true);
        menuSelect.enable(true);
        menuPaste.enable(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        menuNew = new javax.swing.JMenuItem();
        menuOpen = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Edit.setMnemonic(KeyEvent.VK_E);
        meunCut = new javax.swing.JMenuItem();
        menuCopy = new javax.swing.JMenuItem();
        menuPaste = new javax.swing.JMenuItem();
        meunDelete = new javax.swing.JMenuItem();
        menuSelect = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        Help.setMnemonic(KeyEvent.VK_H);
        about = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        formateMenu = new javax.swing.JMenu();
        formateMenu.setMnemonic(KeyEvent.VK_F);
        saveMenu = new javax.swing.JMenu();
        saveMenu.setMnemonic(KeyEvent.VK_S);
        open_low = new javax.swing.JMenuItem();
        save_low = new javax.swing.JMenuItem();
        openHighLevel = new javax.swing.JMenuItem();
        saveHigh = new javax.swing.JMenuItem();
        open_reader = new javax.swing.JMenuItem();
        save_reader = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtArea.setColumns(20);
        txtArea.setRows(5);
        txtArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtArea);

        File.setText("File");
        File.setMnemonic(KeyEvent.VK_F);

        menuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNew.setText("New");
        menuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewActionPerformed(evt);
            }
        });
        File.add(menuNew);

        menuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuOpen.setText("Open");
        menuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenActionPerformed(evt);
            }
        });
        File.add(menuOpen);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setText("Save");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        File.add(menuSave);

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        File.add(menuExit);

        jMenuBar1.add(File);

        Edit.setText("Edit");

        meunCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        meunCut.setText("Cut");
        meunCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunCutActionPerformed(evt);
            }
        });
        Edit.add(meunCut);

        menuCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuCopy.setText("Copy");
        menuCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCopyActionPerformed(evt);
            }
        });
        Edit.add(menuCopy);

        menuPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        menuPaste.setText("Paste");
        menuPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPasteActionPerformed(evt);
            }
        });
        Edit.add(menuPaste);

        meunDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        meunDelete.setText("Delete");
        meunDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meunDeleteActionPerformed(evt);
            }
        });
        Edit.add(meunDelete);

        menuSelect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuSelect.setText("Select All");
        menuSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSelectActionPerformed(evt);
            }
        });
        Edit.add(menuSelect);

        jMenuBar1.add(Edit);

        Help.setText("Help");

        about.setText("about");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        Help.add(about);

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Windows Style");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        Help.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("Java Style");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        Help.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("Metal Style");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        Help.add(jRadioButtonMenuItem3);

        jMenuBar1.add(Help);

        formateMenu.setText("Formate");
        formateMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formateMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(formateMenu);

        saveMenu.setText("Save_File");

        open_low.setText("fileInputStream open lowlevel");
        open_low.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_lowActionPerformed(evt);
            }
        });
        saveMenu.add(open_low);

        save_low.setText("fileOutputStream save lowlevel");
        save_low.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_lowActionPerformed(evt);
            }
        });
        saveMenu.add(save_low);

        openHighLevel.setText("fileInputStream open Highlevel");
        openHighLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openHighLevelActionPerformed(evt);
            }
        });
        saveMenu.add(openHighLevel);

        saveHigh.setText("fileOutputStream save Highlevel");
        saveHigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveHighActionPerformed(evt);
            }
        });
        saveMenu.add(saveHigh);

        open_reader.setText("fileReader open");
        open_reader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_readerActionPerformed(evt);
            }
        });
        saveMenu.add(open_reader);

        save_reader.setText("fileWriter save");
        save_reader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_readerActionPerformed(evt);
            }
        });
        saveMenu.add(save_reader);

        jMenuBar1.add(saveMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewActionPerformed
       txtArea.setText(" "); // TODO add your handling code here:
    }//GEN-LAST:event_menuNewActionPerformed

    private void menuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenActionPerformed
        JFileChooser jf =new JFileChooser();
        int retval=jf.showOpenDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
           txtArea.setText(jf.getSelectedFile().getPath()+"\n");
           //txtArea.setText(jf.getName(jf.getSelectedFile()));
        }          // TDO add your handling code here:
    }//GEN-LAST:event_menuOpenActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
        JFileChooser jf =new JFileChooser();
        int retval=jf.showSaveDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
            
            txtArea.setText(jf.getSelectedFile().getPath());
        }  // TODO add your handling code here:
    }//GEN-LAST:event_menuSaveActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        System.exit(DISPOSE_ON_CLOSE);       // TODO add your handling code here:
    }//GEN-LAST:event_menuExitActionPerformed

    private void meunCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunCutActionPerformed
      String s =txtArea.getSelectedText();
      txtArea.cut();
      //txtArea.replaceRange("",txtArea.getSelectionStart(),txtArea.getSelectionEnd());// TODO add your handling code here:
    }//GEN-LAST:event_meunCutActionPerformed

    private void menuSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSelectActionPerformed
        txtArea.selectAll();        // TODO add your handling code here:
    }//GEN-LAST:event_menuSelectActionPerformed

    private void menuCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCopyActionPerformed
        txtArea.copy();        // TODO add your handling code here:
    }//GEN-LAST:event_menuCopyActionPerformed

    private void menuPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPasteActionPerformed
        txtArea.paste();        // TODO add your handling code here:
    }//GEN-LAST:event_menuPasteActionPerformed

    private void meunDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meunDeleteActionPerformed
        txtArea.replaceSelection(" ");        // TODO add your handling code here:
    }//GEN-LAST:event_meunDeleteActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
       
        final JDialog about = new JDialog(this,"About me",true);
        about.setLayout(null);
        about.setResizable(false);
        about.setBounds(100,100,200,200);
        JLabel label = new JLabel("NotePad ver 1.0");
        label.setBounds(50, 50, 100, 30);
        about.add(label);
        JButton ok = new JButton("OK");
           //about.add(ok);
       
        ok.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
               about.dispose(); //To change body of generated methods, choose Tools | Templates.
            }
        });
        about.add(ok);
        ok.setBounds(40, 100, 100, 50);
        about.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        com.sun.java.swing.plaf.windows.WindowsLookAndFeel lf = new com.sun.java.swing.plaf.windows.WindowsLookAndFeel ();
        try {
            UIManager.setLookAndFeel(lf);
             SwingUtilities.updateComponentTreeUI(this);
        }
         catch(Exception e){
             e.printStackTrace();
         }   // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        com.sun.java.swing.plaf.motif.MotifLookAndFeel lm=new com.sun.java.swing.plaf.motif.MotifLookAndFeel();
        try{
            UIManager.setLookAndFeel(lm);
        
            SwingUtilities.updateComponentTreeUI(this);
        }
        catch(Exception e){
            e.printStackTrace();
        }           // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
          com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel ln=new com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel();
        try {
            UIManager.setLookAndFeel(ln);
            SwingUtilities.updateComponentTreeUI(this);
        }catch(Exception e){
        
            e.printStackTrace();
        }             // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void txtAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAreaKeyTyped
        mEnable();        // TODO add your handling code here:
    }//GEN-LAST:event_txtAreaKeyTyped

    private void formateMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formateMenuMouseClicked
        // TODO add your handling code here:
         final JDialog formate = new JDialog(this,"Formate",true);
        JPanel tabPanel = new JPanel();//to add tab panel
        JPanel controlPanel = new JPanel();// to add sample Label // buttons
        JPanel fontPanel = new JPanel();//font panel;
        JPanel colorPanel = new JPanel();
        JPanel sizePanel = new JPanel();
        JTabbedPane tab = new JTabbedPane();
        final JLabel sample = new JLabel("Sample");
        sample.setFont(new Font((String) "Arial",Font.BOLD,25));
        final JSlider sizeSlider = new JSlider(10, 60,10);
        sizeSlider.setPaintTicks(true);
        sizeSlider.setMajorTickSpacing(10);
        sizeSlider.setMinorTickSpacing(5);
        sizeSlider.setPaintLabels(true);
        sizeSlider.addChangeListener(new ChangeListener() {

             @Override
             public void stateChanged(ChangeEvent e) {
                 sample.setFont(new Font((String) "Arial",Font.BOLD,sizeSlider.getValue())); //To change body of generated methods, choose Tools | Templates.
             }
         });
        sizePanel.add(sizeSlider);
        final JComboBox colors = new JComboBox();
        colors.addItem("RED");
        colors.addItem("GREEN");
        colors.addItem("BLUE");
        final JComboBox col = new JComboBox();
          int[] values = new int[] { 0, 128, 192, 255 };
          for (int r = 0; r < values.length; r++)
           for (int g = 0; g < values.length; g++)
        for (int b = 0; b < values.length; b++) {
          Color cl = new Color(values[r], values[g], values[b]);
          col.addItem(cl);
        }
       
         col.addActionListener(new ActionListener() {

             @Override
             public void actionPerformed(ActionEvent e) {
                 
                 JLabel l=new JLabel();
                 l.setBackground((Color)col.getSelectedItem());
                 sample.setForeground((Color)col.getSelectedItem());
                 //To change body of generated methods, choose Tools | Templates.
             }
         });
        JButton apply = new JButton("Apply");
        
        JButton cancel = new JButton("Cancel");
        GraphicsEnvironment ge= GraphicsEnvironment.getLocalGraphicsEnvironment();
        String []Fontsarray=ge.getAvailableFontFamilyNames();
        final JList fontList = new JList(Fontsarray);
        JScrollPane s = new JScrollPane(fontList);
        fontList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                   sample.setFont(new Font((String) fontList.getSelectedValue(),Font.BOLD,sizeSlider.getValue()));
                //To change body of generated methods, choose Tools | Templates.
            }
        });
        fontPanel.add(s);
      
        colors.setRenderer(new ListCellRenderer() {

             @Override
             public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                 JLabel label=new JLabel();
            label.setText((value.toString()));
            label.setOpaque(true);
            if(isSelected){
                switch(index){
                    case 0:
                        label.setBackground(Color.red);
                        sample.setForeground(Color.red);
                    break;
                    case 1:
                        label.setBackground(Color.green);
                        sample.setForeground(Color.green);
                    break;
                    case 2:
                     label.setBackground(Color.blue);
                     sample.setForeground(Color.blue);
                    break; 
                }
            }   
             return label;
                 
             }
         });
        
      
        colorPanel.add(colors);
       
        col.setRenderer(new ColorComboRenderer());
        colorPanel.add(col);
        apply.addActionListener(new ActionListener() {

             @Override
             public void actionPerformed(ActionEvent e) {
                if(colors.getSelectedItem()=="RED")
                    txtArea.setForeground(Color.red);
                 else if(colors.getSelectedItem()=="BLUE")
                    txtArea.setForeground(Color.BLUE);
                 else if(colors.getSelectedItem()=="GREEN")
                    txtArea.setForeground(Color.GREEN);
                 txtArea.setFont(new Font((String) fontList.getSelectedValue(),Font.BOLD,sizeSlider.getValue())); //To change body of generated methods, choose Tools | Templates.
                  formate.dispose();
             }
         });
        cancel.addActionListener(new ActionListener() {

             @Override
             public void actionPerformed(ActionEvent e) {
                 formate.dispose();
             }
         } );
        tab.addTab("Font",fontPanel);
        tab.addTab("Color",colorPanel);
        tab.addTab("Size",sizePanel);
        tabPanel.setLayout(new BorderLayout());
        tabPanel.add(tab,"Center");
        
        controlPanel.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        c.gridx=0;
        c.gridy=0;
        controlPanel.add(sample,c);
        c.gridx=0;
        c.gridy=1;
        controlPanel.add(apply,c);
        c.gridx=1;
        c.gridy=1;
        controlPanel.add(cancel,c);
       
        formate.setResizable(false);
        formate.setBounds(100,100,450,400);
        formate.setLayout(new BorderLayout());
        formate.add(tabPanel,"Center");
        formate.add(controlPanel,"South");
        formate.setVisible(true);
       
    }//GEN-LAST:event_formateMenuMouseClicked

    private void open_lowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_lowActionPerformed
        JFileChooser jf =new JFileChooser();
        int retval=jf.showOpenDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
            String path=jf.getSelectedFile().getPath();
            try {
                FileInputStream open = new FileInputStream(path);
                int size = open.available();
                byte[] b = new byte[size];
                open.read(b);
                txtArea.setText(new String(b));
                open.close();    
        } catch(Exception e){
            e.printStackTrace();
            }    
        }    
        /*FileDialog fd = new FileDialog(this,"Open a file",FileDialog.LOAD);
        fd.setVisible(true);
        String path = fd.getDirectory()+fd.getFile();
        try {
                FileInputStream open = new FileInputStream(path);
                int size = open.available();
                byte[] b = new byte[size];
                open.read(b);
                txtArea.setText(new String(b));
                open.close();    
        } catch(Exception e){
            e.printStackTrace();
        }*/    
    }//GEN-LAST:event_open_lowActionPerformed

    private void save_lowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_lowActionPerformed
        JFileChooser jf =new JFileChooser();
        int retval=jf.showSaveDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
        String path=jf.getSelectedFile().getPath();
            try{
            FileOutputStream save = new FileOutputStream(path);
            byte [] b = txtArea.getText().getBytes();
            save.write(b);
            save.flush();
            save.close();
        }catch(Exception e){
            e.printStackTrace();
            }
        }    
        /*FileDialog fd = new FileDialog(this, "Save file",FileDialog.LOAD);
        fd.setVisible(true);
        String path= fd.getDirectory()+fd.getFile();
        try{
            FileOutputStream save = new FileOutputStream(path);
            byte [] b = txtArea.getText().getBytes();
            save.write(b);
            save.flush();
            save.close();
        }catch(Exception e){
            e.printStackTrace();
        }*/// TODO add your handling code here:
    }//GEN-LAST:event_save_lowActionPerformed

    private void openHighLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openHighLevelActionPerformed
        JFileChooser jf =new JFileChooser();
        int retval=jf.showOpenDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
            String path=jf.getSelectedFile().getPath();
            try {
                FileInputStream open = new FileInputStream(path);
                DataInputStream in = new DataInputStream(open);
                txtArea.setText(new String(in.readUTF()));
                in.close();    
        } catch(Exception e){
            e.printStackTrace();
            }    
        }      // TODO add your handling code here:
    }//GEN-LAST:event_openHighLevelActionPerformed

    private void saveHighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveHighActionPerformed
       JFileChooser jf =new JFileChooser();
        int retval=jf.showSaveDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
        String path=jf.getSelectedFile().getPath();
            try{
            FileOutputStream save = new FileOutputStream(path);
            DataOutputStream out = new DataOutputStream(save);
            out.writeUTF(txtArea.getText());
            out.flush();
            out.close();
        }catch(Exception e){
            e.printStackTrace();
            }
        }     // TODO add your handling code here:
    }//GEN-LAST:event_saveHighActionPerformed

    private void open_readerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_readerActionPerformed
        JFileChooser jf =new JFileChooser();
        int retval=jf.showOpenDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
            String path=jf.getSelectedFile().getPath();
            try {
                FileReader open = new FileReader(path);
                char[] b = new char[(int)jf.getSelectedFile().length()/2];
                open.read(b);
                txtArea.setText(new String(b));
                open.close();    
        } catch(Exception e){
            e.printStackTrace();
            }    
        }    // TODO add your handling code here:
    }//GEN-LAST:event_open_readerActionPerformed

    private void save_readerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_readerActionPerformed
        JFileChooser jf =new JFileChooser();
        int retval=jf.showSaveDialog(this);
        if(retval==JFileChooser.APPROVE_OPTION){
        String path=jf.getSelectedFile().getPath();
            try{
            FileWriter save = new FileWriter(path);
            save.write(txtArea.getText());
            save.flush();
            save.close();
        }catch(Exception e){
            e.printStackTrace();
            }
        }    // TODO add your handling code here:
    }//GEN-LAST:event_save_readerActionPerformed
    
    
   
    public class ColorComboRenderer extends JPanel implements ListCellRenderer {
    protected Color m_c = Color.black;

    public ColorComboRenderer() {
    super();
    setBorder(new CompoundBorder(
        new MatteBorder(2, 10, 2, 10, Color.white), new LineBorder(
            Color.black)));
  }

  public Component getListCellRendererComponent(JList list, Object obj,
      int row, boolean sel, boolean hasFocus) {
    if (obj instanceof Color)
      m_c = (Color) obj;
    return this;
    
  }

  public void paint(Graphics g) {
    setBackground(m_c);
    super.paint(g);
  }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notepad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Edit;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Help;
    private javax.swing.JMenuItem about;
    private javax.swing.JMenu formateMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuCopy;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuNew;
    private javax.swing.JMenuItem menuOpen;
    private javax.swing.JMenuItem menuPaste;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JMenuItem menuSelect;
    private javax.swing.JMenuItem meunCut;
    private javax.swing.JMenuItem meunDelete;
    private javax.swing.JMenuItem openHighLevel;
    private javax.swing.JMenuItem open_low;
    private javax.swing.JMenuItem open_reader;
    private javax.swing.JMenuItem saveHigh;
    private javax.swing.JMenu saveMenu;
    private javax.swing.JMenuItem save_low;
    private javax.swing.JMenuItem save_reader;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
